# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:

# CA 구성 
  ca0:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.study.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/$tlsKey_org1
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.study.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/$caKey_org1 -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org1.study.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg1

  ca1:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org2
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.study.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/$tlsKey_org2
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.study.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/$caKey_org2 -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org2.study.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg2

# Orderer 구성
# zookeeper 3개
# kafka 4개

  # zookeeper0:
  #   container_name: zookeeper0
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: zookeeper
  #   environment:
  #     - ZOO_MY_ID=1
  #     - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888

  # zookeeper1:
  #   container_name: zookeeper1
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: zookeeper
  #   environment:
  #     - ZOO_MY_ID=2
  #     - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888

  # zookeeper2:
  #   container_name: zookeeper2
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: zookeeper
  #   environment:
  #     - ZOO_MY_ID=3
  #     - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888

  # kafka0:
  #   container_name: kafka0
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: kafka
  #   environment:
  #     - KAFKA_BROKER_ID=0
  #     - KAFKA_MIN_INSYNC_REPLICAS=2
  #     - KAFKA_DEFAULT_REPLICATION_FACTOR=3
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
  #   depends_on:
  #     - zookeeper0
  #     - zookeeper1
  #     - zookeeper2

  # kafka1:
  #   container_name: kafka1
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: kafka
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_MIN_INSYNC_REPLICAS=2
  #     - KAFKA_DEFAULT_REPLICATION_FACTOR=3
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
  #   depends_on:
  #     - zookeeper0
  #     - zookeeper1
  #     - zookeeper2

  # kafka2:
  #   container_name: kafka2
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: kafka
  #   environment:
  #     - KAFKA_BROKER_ID=2
  #     - KAFKA_MIN_INSYNC_REPLICAS=2
  #     - KAFKA_DEFAULT_REPLICATION_FACTOR=3
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
  #   depends_on:
  #     - zookeeper0
  #     - zookeeper1
  #     - zookeeper2

  # kafka3:
  #   container_name: kafka3
  #   extends:
  #     file: base/docker-compose-base.yaml
  #     service: kafka
  #   environment:
  #     - KAFKA_BROKER_ID=3
  #     - KAFKA_MIN_INSYNC_REPLICAS=2
  #     - KAFKA_DEFAULT_REPLICATION_FACTOR=3
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
  #   depends_on:
  #     - zookeeper0
  #     - zookeeper1
  #     - zookeeper2

  orderer.study.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer.study.com
    container_name: orderer.study.com
    # depends_on:
    #   - kafka0
    #   - kafka1
    #   - kafka2
    #   - kafka3

# couchDB 구성 
  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    ports:
      - "5984:5984"

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    ports:
      - "6984:5984"

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    ports:
      - "7984:5984"

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    ports:
      - "8984:5984"                  

# peer 구성
  peer0.org1.study.com:
    container_name: peer0.org1.study.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984    
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.study.com
    depends_on:
      - couchdb0

  peer1.org1.study.com:
    container_name: peer1.org1.study.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984       
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.org1.study.com
    depends_on:
      - couchdb1

  peer0.org2.study.com:
    container_name: peer0.org2.study.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984       
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org2.study.com
    depends_on:
      - couchdb2      

  peer1.org2.study.com:
    container_name: peer1.org2.study.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984       
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.org2.study.com
    depends_on:
      - couchdb3

# Fabric Network test용 cli 구성
  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - CHANNEL_NAME=studychannel
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.study.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.study.com/peers/peer0.org1.study.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.study.com/peers/peer0.org1.study.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.study.com/peers/peer0.org1.study.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.study.com/users/Admin@org1.study.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
   # command: /bin/bash -c './scripts/script.sh ${CHANNEL_NAME}; sleep $TIMEOUT'
    volumes:
        - /var/run/:/host/var/run/
        - ./test-network/chaincode:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./test-network/script/:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.study.com
      - peer0.org1.study.com
      - peer1.org1.study.com